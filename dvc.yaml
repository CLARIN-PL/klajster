stages:
  preprocess_dataset_for_nvidia:
    matrix:
      dataset: [ "polemo2" ]
    cmd: >-
      PYTHONPATH=. python3 experiments/scripts/preprocess_dataset.py 
      --ds polemo2 
      --cfg-type lightning_nvidia
    params:
      - experiments/configs/datasets/${item.dataset}.yaml:
          - common_args
          - datasets.lightning_nvidia
    deps:
      - experiments/scripts/preprocess_dataset.py
    outs:
      - data/datasets/${item.dataset}/lightning_nvidia

  preprocess_dataset_for_amd:
    matrix:
      dataset: [ "polemo2" ]
    cmd: >-
      export SINGULARITY_BIND=;
      srun 
      -N 1
      --partition=dev-g
      --account=project_465000858
      singularity exec
      -B $(pwd):/myrun 
      /project/project_465000858/klajster.sif 
      bash -c "
      \$WITH_CONDA;
      cd /myrun;
      PYTHONPATH=. python experiments/scripts/preprocess_dataset.py 
      --ds ${item.dataset} 
      --cfg-type lightning_amd
      "
    params:
      - experiments/configs/datasets/${item.dataset}.yaml:
          - common_args
          - datasets.lightning_amd
    deps:
      - experiments/scripts/preprocess_dataset.py
    outs:
      - data/datasets/${item.dataset}/lightning_amd

  run_nvidia_benchmark:
    matrix:
      dataset: [ "polemo2" ]
      embedding: [
        "allegro__herbert-base-cased",
      ]
      num_gpus: [ 1, 2, 4 ]
    cmd: >-
      NCCL_P2P_DISABLE=1 PYTHONPATH=. python3 experiments/scripts/evaluate_lightning_classification.py 
      --ds ${item.dataset}
      --embedding-path ${item.embedding} 
      --pipeline-params-path experiments/configs/eval/${item.dataset}/${item.embedding}.yaml
      --output-path data/benchmark/nvidia_${item.embedding}_${item.dataset}_num-gpus-${item.num_gpus}
      --gpu-type nvidia
      --num-nodes 1
      --devices ${item.num_gpus}
      --accelerator gpu
      --retrains 1
    deps:
      - experiments/scripts/evaluate_lightning_classification.py
      - data/datasets/${item.dataset}/lightning_nvidia
      - experiments/configs/eval/${item.dataset}/${item.embedding}.yaml
    outs:
      - data/benchmark/nvidia_${item.embedding}_${item.dataset}_num-gpus-${item.num_gpus}

  run_amd_benchmark:
    matrix:
      dataset: [ "polemo2" ]
      embedding: [
        "allegro__herbert-base-cased",
      ]
      device_cfg: [
        {"num_nodes": 1, "num_gpus": 1},
        {"num_nodes": 1, "num_gpus": 2},
        {"num_nodes": 1, "num_gpus": 4},
        {"num_nodes": 1, "num_gpus": 8},
        {"num_nodes": 2, "num_gpus": 8},
      ]
    cmd: >-
      MYMASKS="0xfe000000000000,0xfe00000000000000,0xfe0000,0xfe000000,0xfe,0xfe00,0xfe00000000,0xfe0000000000";
      export SINGULARITY_BIND=;
      srun 
      -t 24:00:00
      -N ${item.device_cfg.num_nodes}
      --account=project_465000858
      --partition=standard-g
      --cpu-bind=mask_cpu:$MYMASKS
      --ntasks-per-node ${item.device_cfg.num_gpus} 
      --gpus $((${item.device_cfg.num_gpus}*${item.device_cfg.num_nodes}))
      singularity exec 
      -B $(pwd):/myrun 
      /project/project_465000858/klajster.sif 
      bash -c "
      \$WITH_CONDA;
      cd /myrun;
      source setup_envs.sh;
      PYTHONPATH=. python experiments/scripts/evaluate_lightning_classification.py 
      --ds ${item.dataset}
      --embedding-path ${item.embedding}
      --pipeline-params-path experiments/configs/eval/${item.dataset}/${item.embedding}.yaml
      --output-path data/benchmark/amd_${item.embedding}_${item.dataset}_num-nodes-${item.device_cfg.num_nodes}_num-gpus-${item.device_cfg.num_gpus}
      --num-nodes ${item.device_cfg.num_nodes}
      --devices ${item.device_cfg.num_gpus}
      --gpu-type amd
      --accelerator gpu
      --retrains 1
      "
    deps:
      - experiments/scripts/evaluate_lightning_classification.py
      - data/datasets/${item.dataset}/lightning_amd
      - experiments/configs/eval/${item.dataset}/${item.embedding}.yaml
    outs:
      - data/benchmark/amd_${item.embedding}_${item.dataset}_num-nodes-${item.device_cfg.num_nodes}_num-gpus-${item.device_cfg.num_gpus}

  train_retnet:
    matrix:
      device_cfg: [
          {"num_nodes": 2, "num_gpus": 8},
        ]
    cmd: >-
      MYMASKS="0xfe000000000000,0xfe00000000000000,0xfe0000,0xfe000000,0xfe,0xfe00,0xfe00000000,0xfe0000000000";
      export SINGULARITY_BIND=;
      export HF_DATASETS_CACHE="/myrun/.cache/hf";
      srun 
      -t 24:00:00
      -N ${item.device_cfg.num_nodes}
      --cpu-bind=mask_cpu:$MYMASKS
      --account=project_465000858
      --partition=standard-g
      --ntasks-per-node ${item.device_cfg.num_gpus} 
      --gpus $((${item.device_cfg.num_gpus}*${item.device_cfg.num_nodes}))
      singularity exec 
      -B $(pwd):/myrun 
      /project/project_465000858/klajster.sif 
      bash -c "
      \$WITH_CONDA;
      cd /myrun;
      source setup_envs.sh;
      cd RetNet;
      PYTHONPATH=. python train.py
      --devices ${item.device_cfg.num_gpus}
      --num-nodes ${item.device_cfg.num_nodes}
      --output-dir ../data/retnet
      --dataset-sample 0.1
      --test-size 0.1
      --model-size 300m      
      --max-length 4096
      --learning-rate 6e-4 
      --weight-decay 0.01 
      --max-steps 20000
      --batch-size 16
      --num-workers 4
      "
    deps:
      - RetNet/train.py
    outs:
      - .../data/retnet
